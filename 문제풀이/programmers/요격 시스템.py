targets = [[4,5],[4,8],[10,14],[11,13],[5,12],[3,7],[1,4]]
# 1에 한번 > 4 - 5 에 한번 > 11 12 에 한번  다막을수있음 
# [[1, 4], [3, 7], [4, 5], [4, 8], [5, 12], [10, 14], [11, 13]]
# [1,4] = 1,2,3,4 겹치지않음  1 로선택하고 1 개
# [3,7] = 3,4,5,6,7 겹치는 부분 4,5
# [4,5] = 4,5  겹치는부분 4,5
# [4,8] = 4,5,6,7,8 겹치는부분 4,5 2개
# [5,12] = 5,6,7,8,9,10,11,12 겹치는부분 11,12
# [10,14] = 10,11,12,13,14  겹치는부분 11,12
# [11,13] = 10,11,12,13  겹치는부분 11,12 3개 
# 탐욕법을 생각안했다 
def solution(targets):
    targets.sort(key=lambda x:[x[1],x[0]])
    #targets.sort()
    # 다른코드를보면 
    # print(targets.sort(key=lambda x:[x[1],x[0]]))
    # None 나오는데 왜 넣었을까?
    answer = 0
    end= 0 
    # 소트를 하고 시작해버리면 3개 안했을 경우 2개
    # 첫접근
    # for i,j in targets:
    #    i+=j 같은 생각을한상태
    # 위처럼 겹치는부분인데 더 간단히 생각을안하고 
    # 1,2,3,4 를 나열할려고했다 
    # 그나마 접근방식이 같았던건 정렬부터하자 개념은 같다
    # 정렬을해야 쉽게 볼테니까 
    # 탐욕법 더 공부하거나 코테를 더많이봐야겠다
    for i in targets:
        
        if i[0]>= end :
            print(i[0],i[1])
            answer +=1
            print(i[0])
            end = i[1]
        
    print(answer)    
    return answer
solution(targets)